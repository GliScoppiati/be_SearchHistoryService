// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SearchHistoryService.Data;

#nullable disable

namespace SearchHistoryService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250512065135_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SearchHistoryService.Models.SearchFilter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FilterName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FilterType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SearchHistoryId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SearchHistoryId");

                    b.ToTable("SearchFilters");
                });

            modelBuilder.Entity("SearchHistoryService.Models.SearchHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("SearchedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("SearchHistories");
                });

            modelBuilder.Entity("SearchHistoryService.Models.SearchFilter", b =>
                {
                    b.HasOne("SearchHistoryService.Models.SearchHistory", "SearchHistory")
                        .WithMany("Filters")
                        .HasForeignKey("SearchHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SearchHistory");
                });

            modelBuilder.Entity("SearchHistoryService.Models.SearchHistory", b =>
                {
                    b.Navigation("Filters");
                });
#pragma warning restore 612, 618
        }
    }
}
